name: Action-Test

on:
  workflow_dispatch:
  push:
    paths:
      - 'action.yml'
      - 'Scripts/**'
      - '.github/workflows/Action-Test.yml'

env:
  VariableFilePath: global.variables.json
  TenantID: ${{ secrets.TENANT_ID }}
  AppID: ${{ secrets.APP_ID }}
  Subscription: ${{ secrets.SUBSCRIPTION }}
  AppSecret: ${{ secrets.APP_SECRET }}
  ModulesPath: Modules
  ModuleName: ResourceGroup
  ModuleVersion: "1.0"

jobs:
  Validate:
    strategy:
      max-parallel: 1 # Avoid collision as parameters will be same
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout parameters
        uses: actions/checkout@v2

      - name: Load variables
        uses: equinor/AzVariables@v1

      - name: Connect to Azure
        uses: equinor/AzConnect@v1

      - name: Validate resource
        uses: equinor/AzModules@v1
        with:
          Action: Validate
          ParameterFolderPath: ${{ env.ModulesPath }}/${{ env.ModuleName }}/${{ env.ModuleVersion }}/Parameters
          ParameterOverrides: resourceGroupName=${{ env.ResourceGroupName }}

      - name: Deploy resource
        id: Deploy
        uses: equinor/AzModules@v1
        with:
          Action: Deploy
          ParameterFolderPath: ${{ env.ModulesPath }}/${{ env.ModuleName }}/${{ env.ModuleVersion }}/Parameters
          ParameterOverrides: resourceGroupName=${{ env.ResourceGroupName }}

      - name: Handle output
        shell: pwsh
        run: |
          Write-Output "Reference all outputs with PowerShell."
          $Output = '${{ steps.Deploy.outputs.Output }}' | ConvertFrom-JSON
          $Output.PSObject.Properties | Select Name, Value | Format-Table -Wrap

          Write-Output "Reference specific outputs with PowerShell."
          Write-Output "lockMode = $($Output.lockMode)"
          Write-Output "resourceGroupID = $($Output.resourceGroupID)"
          Write-Output "resourceGroupName = $($Output.resourceGroupName)"

          Write-Output "Reference specific outputs within a workflow."
          Write-Output 'lockMode = ${{ fromJSON(steps.Deploy.outputs.Output).lockMode }}'
          Write-Output 'resourceGroupID = ${{ fromJSON(steps.Deploy.outputs.Output).resourceGroupID }}'
          Write-Output 'resourceGroupName = ${{ fromJSON(steps.Deploy.outputs.Output).resourceGroupName }}'
